<?php
/**
 * Convert a list of emoji files to html entities.
 *
 * @package LocalTwemoji
 */

/**
 * Do it.
 *
 * @param array $args Script arguments.
 */
function pwcc_local_twemoji_doit( $args ) {

	// If there are no arguments, print usage and exit.
	if ( empty( $args ) ) {
		echo "Usage: convert-to-entities.php <files>\n";
		exit( 1 );
	}

	// First argument is the script name.
	$entities = $args;
	array_shift( $entities );

	// Second argument is the new version number.
	$new_version = array_shift( $entities );

	// Convert each file to it's base name without the extension.
	foreach ( $entities as &$file ) {
		$file = basename( $file );
		// Remove the svg extension.
		$file = substr( $file, 0, -4 );
	}

	// Convert the files to html entities.
	foreach ( $entities as &$file ) {
		$file = preg_replace( '/([a-z0-9]+)/', '&#x$1;', $file );
		// Remove the - between the hex values.
		$file = str_replace( '-', '', $file );
	}

	// Sort the entities by length, longest first.
	usort(
		$entities,
		function ( $a, $b ) {
			return strlen( $b ) - strlen( $a );
		}
	);

	// Remove items that are not emoji.
	$entities = array_filter(
		$entities,
		function ( $val ) {
			return strlen( $val ) >= 8 ? $val : false;
		}
	);

	// Create partials.
	$partials = array();
	foreach ( $entities as $entity ) {
		$entity         = trim( $entity, ';' );
		$split_entities = explode( ';', $entity );
		// Append ; to each split entity.
		$split_entities = array_map(
			function ( $entity ) {
				return $entity . ';';
			},
			$split_entities
		);

		// Merge the split entities in to the partials array.
		$partials = array_merge( $partials, $split_entities );
	}

	// Partials should be unique.
	$partials = array_unique( $partials );

	// Remove items that are not emoji.
	$partials = array_filter(
		$partials,
		function ( $val ) {
			return strlen( $val ) >= 8 ? $val : false;
		}
	);

	// Write the entities and partials file.
	$content = array();

	$content[] = '<?php';

	$content[] = '/**';
	$content[] = ' * Local Twemoji';
	$content[] = ' *';
	$content[] = ' * THIS FILE IS AUTOMATICALLY GENERATED. DO NOT MODIFY IT DIRECTLY.';
	$content[] = ' *';
	$content[] = ' * @package           LocalTwemoji';
	$content[] = ' * @author            Peter Wilson';
	$content[] = ' * @copyright         2023 Peter Wilson';
	$content[] = ' * @license           MIT';
	$content[] = " */\n";

	$content[] = 'namespace PWCC\LocalTwemoji\Generated;';
	$content[] = '';

	$content[] = '/**';
	$content[] = ' * Get the entities.';
	$content[] = ' *';
	$content[] = ' * @return array Entities.';
	$content[] = ' */';
	$content[] = 'function get_entities() {';
	$content[] = "\treturn array(\n" . array_reduce(
		$entities,
		function ( $carry, $item ) {
			return $carry .= "\t\t'{$item}',\n";
		},
		''
	) . "\t);";
	$content[] = "}\n";

	$content[] = '/**';
	$content[] = ' * Get the partials.';
	$content[] = ' *';
	$content[] = ' * @return array Partials.';
	$content[] = ' */';
	$content[] = 'function get_partials() {';
	$content[] = "\treturn array(\n" . array_reduce(
		$partials,
		function ( $carry, $item ) {
			return $carry .= "\t\t'{$item}',\n";
		},
		''
	) . "\t);";
	$content[] = "}\n";

	// Create the version function.
	$content[] = '/**';
	$content[] = ' * Get the Twemoji version.';
	$content[] = ' *';
	$content[] = ' * @return string Version.';
	$content[] = ' */';
	$content[] = 'function get_twemoji_version() {';
	$content[] = "\treturn '{$new_version}';";
	$content[] = "}\n";

	$content = implode( "\n", $content );

	// Write the file.
	// phpcs:ignore WordPress.WP.AlternativeFunctions.file_system_operations_file_put_contents -- CLI script.
	file_put_contents( __DIR__ . '/../inc/generated.php', $content );
}

pwcc_local_twemoji_doit( $argv );
